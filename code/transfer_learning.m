function transfer_learning(networkFileName, unzippedPath, network) 
    try
        [augmentedTrainData, validateData, classNames] = load_dataset(unzippedPath);

        options = trainingOptions('adam', ...
            'MaxEpochs', 30, ...
            'MiniBatchSize', 300, ...
            'InitialLearnRate', 0.001, ...
            "LearnRateSchedule", "piecewise", ...
            "LearnRateDropFactor", 0.15, ...
            "LearnRateDropPeriod", 1, ...
            "L2Regularization", 0.003, ...
            'Shuffle', 'every-epoch', ...
            "ValidationData", validateData, ...
            'ValidationFrequency', 30, ...
            'Verbose', true, ...
            "Metrics", "fscore", ...
            'Plots', 'training-progress');
        
        % Train the network
        fprintf('\nStarting training...\n');
        net = trainnet(augmentedTrainData, network, "crossentropy", options);
        
        % Save the trained network
        save(networkFileName, 'net', 'classNames');
        fprintf('\nNetwork saved as %s\n', networkFileName);
        
    catch ME
        fprintf('Error: %s\n', ME.message);
    end

end

% train_provided("food11_network_efficientnet_2.mat", "../food-11", net_1)